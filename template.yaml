AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Feed-Service-Deployment-Descriptor


Parameters:
  Stage:
    Type: String
    Description: Stage name to deploy resources to
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Runtime: java11
    MemorySize: 1024
    Timeout: 20
    AutoPublishAlias: !Ref Stage
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    CodeUri: ./application
    Tags:
      Stage: !Ref Stage
      Service: Feed
      Resource: Lambda
    Environment:
      Variables:
        TABLE: !Ref FeedTable
        APPLICATION_ENVIRONMENT: !Ref Stage
        CLOUD_REGION: us-east-1
        MAIN_CLASS: com.tekcapzule.feed.application.FeedApplication
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Resources:

  # Setup API Gateway

  FeedApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "feed-${Stage}"
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'X-Forwarded-For, Content-Type, Authorization, X-User-Login, X-Channel-Code'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: false
      Variables:
        LAMBDA_ALIAS: !Ref Stage

  # Setup DynamoDB Table

  FeedTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}Feed"
      AttributeDefinitions:
        - AttributeName: feedId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: topicCode
          AttributeType: S
      KeySchema:
        - AttributeName: feedId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: topicGSI
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: topicCode
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
  # S3 Bucket to store the downloaded image from external url
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketName: external-feed-images-store
  # Setup Lambda Functions

  CreateFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-CreateFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/create
            Method: post
            RestApiId:
              Ref: FeedApi

  UpdateFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-UpdateFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/update
            Method: post
            RestApiId:
              Ref: FeedApi

  DisableFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-DisableFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: disableFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/disable
            Method: post
            RestApiId:
              Ref: FeedApi
  GetFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-GetFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/get
            Method: post
            RestApiId:
              Ref: FeedApi

  BookmarkFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-BookmarkFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: bookmarkFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/bookmark
            Method: post
            RestApiId:
              Ref: FeedApi

  ApproveFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-ApproveFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: approveFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/approve
            Method: post
            RestApiId:
              Ref: FeedApi

  ViewFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-ViewFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: viewFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/view
            Method: post
            RestApiId:
              Ref: FeedApi

  GetMyFeedFeedsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-GetMyFeedFeeds"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getMyFeedFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/getMyFeed
            Method: post
            RestApiId:
              Ref: FeedApi

  GetFeedsPendingApprovalsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-GetFeedsPendingApprovals"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getPendingApprovalFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/getPendingApproval
            Method: post
            RestApiId:
              Ref: FeedApi

  RecommendFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-RecommendFeed"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: recommendFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/recommend
            Method: post
            RestApiId:
              Ref: FeedApi

  SearchFeedByTopicFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-SearchFeedByTopic"
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: searchByTopicFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/searchByTopic
            Method: post
            RestApiId:
              Ref: FeedApi


  GetFeedMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Stage}-Feed-GetFeedMetadata"
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getMetadataFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/getMetadata
            Method: post
            RestApiId:
              Ref: FeedApi

  GetAllFeedsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Stage}-Feed-GetAllFeeds
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getAllFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/getAll
            Method: post
            RestApiId:
              Ref: FeedApi

  GetFeedsCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Stage}-Feed-GetFeedsCount
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: FeedTable
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getCountFunction
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/getCount
            Method: post
            RestApiId:
              Ref: FeedApi
  PostFeedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Stage}-Feed-PostFeed
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: FeedTable
        - S3CrudPolicy:
            BucketName:
              Ref: S3Bucket
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: postFunction
          EXT_IMG_BUCKET: external-feed-images-store
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: feed/postFeed
            Method: post
            RestApiId:
              Ref: FeedApi

  # Set Output Variable

Outputs:
  ApiEndpoint:
    Description: "Feed API endpoint."
    Value: !Sub "https://${FeedApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/feed"
